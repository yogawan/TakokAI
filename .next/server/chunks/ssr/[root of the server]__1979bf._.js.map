{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/pratama/Yogawan/Projects/JawirAI/jawiraiv1.6.3/src/pages/_document.js"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head>\n        <link rel=\"icon\" href=\"/favicon/icon.png\" />\n      </Head>\n      <body className=\"antialiased bg-background\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;0BACH,cAAA,qKAAC;oBAAK,KAAI;oBAAO,MAAK;;;;;;;;;;;0BAExB,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/pratama/Yogawan/Projects/JawirAI/jawiraiv1.6.3/src/pages/_app.js"],"sourcesContent":["import \"@/styles/globals.css\";\n\nexport default function App({ Component, pageProps }) {\n  return <Component {...pageProps} />;\n}\n"],"names":[],"mappings":";;;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;IAClD,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///Users/pratama/Yogawan/Projects/JawirAI/jawiraiv1.6.3/src/pages/history/%5Bid%5D.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { requestToGroqAI } from \"../utilities/groq\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatForm from \"./ChatForm\";\nimport ChatHistory from \"./ChatHistory\";\n\nconst ChatDetail = () => {\n  const router = useRouter();\n  const { id } = router.query; // Ambil ID dari URL\n  const [title, setTitle] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (id) {\n      fetchChatDetail();\n      loadLocalChatHistory();\n    }\n  }, [id]);\n\n  // Fetch data chat berdasarkan ID\n  const fetchChatDetail = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(`http://localhost:3000/api/history/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setTitle(response.data.title); // Set title dari response API\n    } catch (error) {\n      console.error(\"Error fetching chat details:\", error.response?.data || error.message);\n    }\n  };\n\n  // Ambil chat history dari localStorage\n  const loadLocalChatHistory = () => {\n    try {\n      const savedHistory = JSON.parse(localStorage.getItem(\"chatHistory\")) || [];\n      setChatHistory(savedHistory);\n    } catch {\n      setChatHistory([]);\n    }\n  };\n\n  // Kirim chat history ke API\n  const syncChatHistoryToServer = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"Token tidak ditemukan\");\n\n      const messages = chatHistory.map((chat) => ({\n        role: chat.role,\n        content: chat.content,\n      }));\n\n      await axios.post(\n        `http://localhost:3000/api/history/${id}`,\n        { messages },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      console.log(\"Chat history berhasil dikirim ke server!\");\n    } catch (error) {\n      console.error(\"Error syncing chat history:\", error.response?.data || error.message);\n    }\n  };\n\n  const handleSend = async () => {\n    if (!input.trim() || input.length > 500) return;\n\n    const userMessage = { role: \"user\", content: input };\n    setChatHistory((prev) => [...prev, userMessage]);\n    setInput(\"\");\n    setIsLoading(true);\n\n    try {\n      const aiResponse = await requestToGroqAI(input);\n      const aiMessage = { role: \"ai\", content: aiResponse };\n      setChatHistory((prev) => [...prev, aiMessage]);\n    } catch {\n      setChatHistory((prev) => [...prev, { role: \"ai\", content: \"Maaf, terjadi kesalahan.\" }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleClearHistory = () => {\n    setChatHistory([]);\n    localStorage.removeItem(\"chatHistory\");\n  };\n\n  return (\n    <div className=\"w-full flex flex-col\">\n      <ChatHeader />\n      <h1 className=\"text-xl font-bold text-center mt-4\">{title || \"Loading...\"}</h1>\n      <ChatForm input={input} setInput={setInput} handleSend={handleSend} isLoading={isLoading} />\n      <ChatHistory chatHistory={chatHistory} isLoading={isLoading} handleClearHistory={handleClearHistory} />\n      <button\n        className=\"bg-blue-500 text-white px-4 py-2 rounded mt-4 mx-auto\"\n        onClick={syncChatHistoryToServer}\n      >\n        Sync Chat to Server\n      </button>\n    </div>\n  );\n};\n\nexport default ChatDetail;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
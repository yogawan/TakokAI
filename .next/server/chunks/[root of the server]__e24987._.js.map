{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/pratama/Yogawan/Projects/JawirAI/jawiraiv1.6.3/src/lib/mongodb.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nif (!MONGODB_URI) {\n  throw new Error(\"Harap setel MONGODB_URI di .env.local\");\n}\n\nconst connectDB = async () => {\n  if (mongoose.connection.readyState >= 1) return;\n\n  try {\n    await mongoose.connect(MONGODB_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    });\n    console.log(\"MongoDB Connected\");\n  } catch (error) {\n    console.error(\"MongoDB Connection Error:\", error);\n  }\n};\n\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,YAAY;IAChB,IAAI,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,UAAU,IAAI,GAAG;IAEzC,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAClC,iBAAiB;YACjB,oBAAoB;QACtB;QACA,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;IAC7C;AACF;uCAEe"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/pratama/Yogawan/Projects/JawirAI/jawiraiv1.6.3/src/models/User.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst ChatSchema = new mongoose.Schema({\n  role: { type: String, enum: [\"user\", \"ai\"], required: true },\n  content: { type: String, required: true },\n});\n\nconst UserSchema = new mongoose.Schema({\n  username: { type: String, required: true, unique: true },\n  email: { type: String, required: true, unique: true },\n  password: { type: String, required: true },\n  chatHistory: [ChatSchema],\n});\n\nexport default mongoose.models.User || mongoose.model(\"User\", UserSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,MAAM;QAAE,MAAM;QAAQ,MAAM;YAAC;YAAQ;SAAK;QAAE,UAAU;IAAK;IAC3D,SAAS;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC1C;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,UAAU;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACvD,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,aAAa;QAAC;KAAW;AAC3B;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/pratama/Yogawan/Projects/JawirAI/jawiraiv1.6.3/src/pages/api/auth/login.js"],"sourcesContent":["import bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\nimport connectDB from \"@/lib/mongodb\";\nimport User from \"@/models/User\";\n\nexport default async function handler(req, res) {\n  if (req.method !== \"POST\") {\n    return res.status(405).json({ message: \"Method Not Allowed\" });\n  }\n\n  await connectDB();\n\n  const { email, password } = req.body;\n\n  if (!email || !password) {\n    return res.status(400).json({ message: \"All fields are required.\" });\n  }\n\n  try {\n    const user = await User.findOne({ email });\n\n    if (!user) {\n      return res.status(401).json({ message: \"Invalid credentials.\" });\n    }\n\n    const isPasswordValid = await bcrypt.compare(password, user.password);\n\n    if (!isPasswordValid) {\n      return res.status(401).json({ message: \"Invalid credentials.\" });\n    }\n\n    const token = jwt.sign({ userId: user._id }, process.env.JWT_SECRET, {\n      expiresIn: \"7d\",\n    });\n\n    res.status(200).json({\n      message: \"Login successful\",\n      token,\n      user: { id: user._id, username: user.username, email: user.email },\n    });\n  } catch (error) {\n    res.status(500).json({ message: \"Server error\", error: error.message });\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;;;;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;QAAqB;IAC9D;IAEA,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAS,AAAD;IAEd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,IAAI;IAEpC,IAAI,CAAC,SAAS,CAAC,UAAU;QACvB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;QAA2B;IACpE;IAEA,IAAI;QACF,MAAM,OAAO,MAAM,8GAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAExC,IAAI,CAAC,MAAM;YACT,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAuB;QAChE;QAEA,MAAM,kBAAkB,MAAM,gHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;QAEpE,IAAI,CAAC,iBAAiB;YACpB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAuB;QAChE;QAEA,MAAM,QAAQ,iHAAA,CAAA,UAAG,CAAC,IAAI,CAAC;YAAE,QAAQ,KAAK,GAAG;QAAC,GAAG,QAAQ,GAAG,CAAC,UAAU,EAAE;YACnE,WAAW;QACb;QAEA,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YACnB,SAAS;YACT;YACA,MAAM;gBAAE,IAAI,KAAK,GAAG;gBAAE,UAAU,KAAK,QAAQ;gBAAE,OAAO,KAAK,KAAK;YAAC;QACnE;IACF,EAAE,OAAO,OAAO;QACd,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAgB,OAAO,MAAM,OAAO;QAAC;IACvE;AACF"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/pratama/Yogawan/Projects/JawirAI/jawiraiv1.6.3/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/pratama/Yogawan/Projects/JawirAI/jawiraiv1.6.3/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/pratama/Yogawan/Projects/JawirAI/jawiraiv1.6.3/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///Users/pratama/Yogawan/Projects/JawirAI/jawiraiv1.6.3/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,+HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,+HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}